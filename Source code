%% Loading data
clear all;clc;
load('Signal.mat');

%% Ввод данных сигнала
Signal=mod2;
FftL=length(Signal);       % Количество линий Фурье спектра. Равно количеству отчетов сигнала

%% Спектральное представление сигнала
FftS=fft(Signal,FftL);     % Получени спектра по ДПФ (или БПФ, по возможности)
FftS=FftS.*conj(FftS)/FftL;% FftS - спектральная плотность мощности
FftS=FftS(1:(FftL/2));     % Берем половину спектра
%% Построение графиков сигнала и спектра

Fd=500000;                   %Частота дискретизации 
F=0:Fd/FftL:Fd/2-Fd/FftL;    %Массив частот вычисляемого спектра Фурье

figure (1)
subplot(2,1,1);           
plot(Signal);      
grid on;
title('Сигнал');          

subplot(2,1,2);             
plot(F,FftS);                  
grid on;
title('Спектр сигнала');             
xlabel('Частота'); 
ylabel('СПМ');

%% Нормировка по масимальному значению
FftS=FftS./max(FftS);      
%% Построение графика сигнала и нормированного спектра
figure (2)
subplot(2,1,1);           
plot(Signal);      
grid on;
title('Сигнал');          

subplot(2,1,2);              
plot(F,FftS);                
grid on;
title('Нормированный по максимуму спектр сигнала');                
xlabel('Частота');                
ylabel('СПМ');       

%% Определение несущих частот по спектру сигнала
minpks=0.05;    %определяем минимальное значение пиков, ниже которых пиики не берем 
distance=5;     %определяем минимальное расстояние между пиками
[pks,locs] = findpeaks(FftS,'MINPEAKHEIGHT',minpks,'MINPEAKDISTANCE',distance);%выводит пики амплидуд синусодит и значения частот при которых они достигаются
%pks - значение пика, locs - значение частоты
freequency=locs.*(Fd/FftL);

